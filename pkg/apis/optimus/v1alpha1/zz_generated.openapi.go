// +build !

/*
Copyright 2018 Cloudflavor Org contributors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.Optimus":       schema_pkg_apis_optimus_v1alpha1_Optimus(ref),
		"github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.OptimusSpec":   schema_pkg_apis_optimus_v1alpha1_OptimusSpec(ref),
		"github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.OptimusStatus": schema_pkg_apis_optimus_v1alpha1_OptimusStatus(ref),
	}
}

func schema_pkg_apis_optimus_v1alpha1_Optimus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Optimus is the Schema for the optimus API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.OptimusSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.OptimusStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.OptimusSpec", "github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.OptimusStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_optimus_v1alpha1_OptimusSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OptimusSpec defines the desired state of Optimus",
				Properties: map[string]spec.Schema{
					"projects": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.Project"),
									},
								},
							},
						},
					},
				},
				Required: []string{"projects"},
			},
		},
		Dependencies: []string{
			"github.com/cloudflavor/optimus/pkg/apis/optimus/v1alpha1.Project"},
	}
}

func schema_pkg_apis_optimus_v1alpha1_OptimusStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OptimusStatus defines the observed state of Optimus",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
